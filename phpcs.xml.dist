<?xml version="1.0"?>
<ruleset name="project-default">
	<description>A custom set of code standard rules to check for WordPress projects.</description>

	<!-- Only check the PHP files. -->
	<arg name="extensions" value="php"/>

	<!-- Check all files in this directory and the directories below it. -->
	<file>.</file>

	<exclude-pattern>*/phpunit.xml*</exclude-pattern>
	<exclude-pattern>*/languages/*</exclude-pattern>
	<exclude-pattern>*/tests/*</exclude-pattern>

	<!-- Third-party code -->
	<exclude-pattern>*/bower-components/*</exclude-pattern>
	<exclude-pattern>*/node_modules/*</exclude-pattern>
	<exclude-pattern>*/vendor/*</exclude-pattern>

	<!-- Ensure certain file types aren't sniffed -->
	<exclude-pattern>*\.(css|js)</exclude-pattern>

	<!-- Don't worry about files that don't contain any code -->
	<rule ref="Internal.NoCodeFound">
		<severity>0</severity>
	</rule>

	<!-- For CI, don't fail on warnings -->
	<config name="ignore_warnings_on_exit" value="1"/>

	<!-- Enforce core standards -->
	<rule ref="WordPress-Core" />

	<!-- Enforce doc standards -->
	<rule ref="WordPress-Docs" />

	<rule ref="WordPress-Extra">
		<!-- Forget about file names -->
		<exclude name="WordPress.Files.FileName"/>

		<!-- Allow empty catch statements -->
		<exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedCatch"/>

		<!-- Allow WP global modification -->
		<exclude name="WordPress.WP.GlobalVariablesOverride.Prohibited"/>
	</rule>

	<!-- Sets the minimum supported WP version to 5.0, which is over a year old. -->
	<config name="minimum_supported_wp_version" value="5.0" />

	<!-- Make missing translator comment a warning. -->
	<rule ref="WordPress.WP.I18n.MissingTranslatorsComment">
		<type>warning</type>
	</rule>

	<!-- Sometimes we need to override globals -->
	<rule ref="WordPress.WP.GlobalVariablesOverride.OverrideProhibited">
		<type>warning</type>
	</rule>

	<!-- PHP version check. -->
	<config name="testVersion" value="7.0-"/>
</ruleset>
